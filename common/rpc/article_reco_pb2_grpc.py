# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import article_reco_pb2 as article__reco__pb2


class ARecommendStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.artilcle_recommend = channel.unary_unary(
        '/ARecommend/artilcle_recommend',
        request_serializer=article__reco__pb2.Article.SerializeToString,
        response_deserializer=article__reco__pb2.Buried_point.FromString,
        )


class ARecommendServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def artilcle_recommend(self, request, context):
    """unary rpc
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ARecommendServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'artilcle_recommend': grpc.unary_unary_rpc_method_handler(
          servicer.artilcle_recommend,
          request_deserializer=article__reco__pb2.Article.FromString,
          response_serializer=article__reco__pb2.Buried_point.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'ARecommend', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
